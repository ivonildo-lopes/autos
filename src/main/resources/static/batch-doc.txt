#criar essas tabelas no banco

-- Criar as Sequências
CREATE SEQUENCE batch_job_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE SEQUENCE batch_job_execution_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE SEQUENCE batch_step_execution_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


-- Criar a Tabela BATCH_JOB_INSTANCE com incremento automático na chave primária
CREATE TABLE BATCH_JOB_INSTANCE (
    JOB_INSTANCE_ID BIGINT NOT NULL PRIMARY KEY DEFAULT nextval('batch_job_seq'),
    VERSION BIGINT,
    JOB_NAME VARCHAR(100) NOT NULL,
    JOB_KEY VARCHAR(32) NOT NULL
);

CREATE UNIQUE INDEX JOB_INST_UN ON BATCH_JOB_INSTANCE(JOB_NAME, JOB_KEY);

-- Criar a Tabela BATCH_JOB_EXECUTION com incremento automático na chave primária
CREATE TABLE BATCH_JOB_EXECUTION (
    JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY DEFAULT nextval('batch_job_execution_seq'),
    VERSION BIGINT,
    JOB_INSTANCE_ID BIGINT NOT NULL,
    CREATE_TIME TIMESTAMP NOT NULL,
    START_TIME TIMESTAMP DEFAULT NULL,
    END_TIME TIMESTAMP DEFAULT NULL,
    STATUS VARCHAR(10),
    EXIT_CODE VARCHAR(2500),
    EXIT_MESSAGE VARCHAR(2500),
    LAST_UPDATED TIMESTAMP,
    JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL,
    FOREIGN KEY (JOB_INSTANCE_ID)
    REFERENCES BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
);

CREATE INDEX IDX_JOB_INST_EXEC ON BATCH_JOB_EXECUTION(JOB_INSTANCE_ID);

-- Criar a Tabela BATCH_STEP_EXECUTION
CREATE TABLE BATCH_STEP_EXECUTION (
    STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY DEFAULT nextval('batch_step_execution_seq'),
    VERSION BIGINT NOT NULL,
    STEP_NAME VARCHAR(100) NOT NULL,
    JOB_EXECUTION_ID BIGINT NOT NULL,
    START_TIME TIMESTAMP NOT NULL,
    END_TIME TIMESTAMP DEFAULT NULL,
    STATUS VARCHAR(10),
    COMMIT_COUNT BIGINT,
    READ_COUNT BIGINT,
    FILTER_COUNT BIGINT,
    WRITE_COUNT BIGINT,
    READ_SKIP_COUNT BIGINT,
    WRITE_SKIP_COUNT BIGINT,
    PROCESS_SKIP_COUNT BIGINT,
    ROLLBACK_COUNT BIGINT,
    EXIT_CODE VARCHAR(2500),
    EXIT_MESSAGE VARCHAR(2500),
    LAST_UPDATED TIMESTAMP,
    FOREIGN KEY (JOB_EXECUTION_ID)
    REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

CREATE INDEX IDX_STEP_EXEC ON BATCH_STEP_EXECUTION(JOB_EXECUTION_ID);

-- Criar a Tabela BATCH_JOB_EXECUTION_PARAMS
CREATE TABLE BATCH_JOB_EXECUTION_PARAMS (
    JOB_EXECUTION_ID BIGINT NOT NULL,
    PARAMETER_NAME VARCHAR(100) NOT NULL,
    PARAMETER_TYPE VARCHAR(100),
    PARAMETER_VALUE TEXT,
    IDENTIFYING CHAR(1) NOT NULL,
    FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

CREATE INDEX IDX_JOB_EXECUTION_PARAMS ON BATCH_JOB_EXECUTION_PARAMS(JOB_EXECUTION_ID);


-- Criar a Tabela BATCH_JOB_EXECUTION_CONTEXT
CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT (
    JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
    SHORT_CONTEXT VARCHAR(2500) NULL,
    SERIALIZED_CONTEXT TEXT NULL,
    FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

-- Criar a Tabela BATCH_STEP_EXECUTION_CONTEXT
CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT (
    STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
    SHORT_CONTEXT VARCHAR(2500) NULL,
    SERIALIZED_CONTEXT TEXT NULL,
    FOREIGN KEY (STEP_EXECUTION_ID) REFERENCES BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
);


-- Adicionar a coluna CREATE_TIME para BATCH_STEP_EXECUTION se estiver ausente; 
-- Incorporá-la na criação principal para fácil modificação.

ALTER TABLE BATCH_STEP_EXECUTION
ADD COLUMN CREATE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

ALTER TABLE BATCH_STEP_EXECUTION
ALTER COLUMN START_TIME DROP NOT NULL;





Reader - Ler
Processor - processa
Writer - escreve

batch cria o job
ex.: VeiculoBatchConfig

